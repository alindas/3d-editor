(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[3],{"6dJA":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));const i={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor.a *= opacity;\n\n\n\t\t}"}},G1Ma:function(t,e,n){"use strict";n.d(e,"b",(function(){return o})),n.d(e,"a",(function(){return r}));var i=n("Womt");class o{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const a=new i["OrthographicCamera"](-1,1,1,-1,0,1),s=new i["BufferGeometry"];s.setAttribute("position",new i["Float32BufferAttribute"]([-1,3,0,-1,-1,0,3,-1,0],3)),s.setAttribute("uv",new i["Float32BufferAttribute"]([0,2,0,0,2,0],2));class r{constructor(t){this._mesh=new i["Mesh"](s,t)}dispose(){this._mesh.geometry.dispose()}render(t){t.render(this._mesh,a)}get material(){return this._mesh.material}set material(t){this._mesh.material=t}}},ITJM:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var i=n("Womt");class o extends i["DataTextureLoader"]{constructor(t){super(t),this.type=i["HalfFloatType"]}parse(t){const e=-1,n=1,o=2,a=3,s=4,r=function(t,i){switch(t){case n:console.error("THREE.RGBELoader Read Error: "+(i||""));break;case o:console.error("THREE.RGBELoader Write Error: "+(i||""));break;case a:console.error("THREE.RGBELoader Bad File Format: "+(i||""));break;default:case s:console.error("THREE.RGBELoader: Error: "+(i||""))}return e},l=1,h=2,c=4,d="\n",p=function(t,e,n){const i=128;e=e||1024;let o=t.pos,a=-1,s=0,r="",l=String.fromCharCode.apply(null,new Uint16Array(t.subarray(o,o+i)));while(0>(a=l.indexOf(d))&&s<e&&o<t.byteLength)r+=l,s+=l.length,o+=i,l+=String.fromCharCode.apply(null,new Uint16Array(t.subarray(o,o+i)));return-1<a&&(!1!==n&&(t.pos+=s+a+1),r+l.slice(0,a))},u=function(t){const e=/^#\?(\S+)/,i=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,o=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,s=/^\s*FORMAT=(\S+)\s*$/,d=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,u={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let m,f;if(t.pos>=t.byteLength||!(m=p(t)))return r(n,"no header found");if(!(f=m.match(e)))return r(a,"bad initial token");u.valid|=l,u.programtype=f[1],u.string+=m+"\n";while(1){if(m=p(t),!1===m)break;if(u.string+=m+"\n","#"!==m.charAt(0)){if((f=m.match(i))&&(u.gamma=parseFloat(f[1])),(f=m.match(o))&&(u.exposure=parseFloat(f[1])),(f=m.match(s))&&(u.valid|=h,u.format=f[1]),(f=m.match(d))&&(u.valid|=c,u.height=parseInt(f[1],10),u.width=parseInt(f[2],10)),u.valid&h&&u.valid&c)break}else u.comments+=m+"\n"}return u.valid&h?u.valid&c?u:r(a,"missing image size specifier"):r(a,"missing format specifier")},m=function(t,e,i){const o=e;if(o<8||o>32767||2!==t[0]||2!==t[1]||128&t[2])return new Uint8Array(t);if(o!==(t[2]<<8|t[3]))return r(a,"wrong scanline width");const l=new Uint8Array(4*e*i);if(!l.length)return r(s,"unable to allocate buffer space");let h=0,c=0;const d=4*o,p=new Uint8Array(4),u=new Uint8Array(d);let m=i;while(m>0&&c<t.byteLength){if(c+4>t.byteLength)return r(n);if(p[0]=t[c++],p[1]=t[c++],p[2]=t[c++],p[3]=t[c++],2!=p[0]||2!=p[1]||(p[2]<<8|p[3])!=o)return r(a,"bad rgbe scanline format");let e,i=0;while(i<d&&c<t.byteLength){e=t[c++];const n=e>128;if(n&&(e-=128),0===e||i+e>d)return r(a,"bad scanline data");if(n){const n=t[c++];for(let t=0;t<e;t++)u[i++]=n}else u.set(t.subarray(c,c+e),i),i+=e,c+=e}const s=o;for(let t=0;t<s;t++){let e=0;l[h]=u[t+e],e+=o,l[h+1]=u[t+e],e+=o,l[h+2]=u[t+e],e+=o,l[h+3]=u[t+e],h+=4}m--}return l},f=function(t,e,n,i){const o=t[e+3],a=Math.pow(2,o-128)/255;n[i+0]=t[e+0]*a,n[i+1]=t[e+1]*a,n[i+2]=t[e+2]*a,n[i+3]=1},y=function(t,e,n,o){const a=t[e+3],s=Math.pow(2,a-128)/255;n[o+0]=i["DataUtils"].toHalfFloat(Math.min(t[e+0]*s,65504)),n[o+1]=i["DataUtils"].toHalfFloat(Math.min(t[e+1]*s,65504)),n[o+2]=i["DataUtils"].toHalfFloat(Math.min(t[e+2]*s,65504)),n[o+3]=i["DataUtils"].toHalfFloat(1)},g=new Uint8Array(t);g.pos=0;const b=u(g);if(e!==b){const t=b.width,n=b.height,o=m(g.subarray(g.pos),t,n);if(e!==o){let e,a,s;switch(this.type){case i["FloatType"]:s=o.length/4;const t=new Float32Array(4*s);for(let e=0;e<s;e++)f(o,4*e,t,4*e);e=t,a=i["FloatType"];break;case i["HalfFloatType"]:s=o.length/4;const n=new Uint16Array(4*s);for(let e=0;e<s;e++)y(o,4*e,n,4*e);e=n,a=i["HalfFloatType"];break;default:console.error("THREE.RGBELoader: unsupported type: ",this.type);break}return{width:t,height:n,data:e,header:b.string,gamma:b.gamma,exposure:b.exposure,type:a}}}return null}setDataType(t){return this.type=t,this}load(t,e,n,o){function a(t,n){switch(t.type){case i["FloatType"]:case i["HalfFloatType"]:t.encoding=i["LinearEncoding"],t.minFilter=i["LinearFilter"],t.magFilter=i["LinearFilter"],t.generateMipmaps=!1,t.flipY=!0;break}e&&e(t,n)}return super.load(t,a,n,o)}}},"Mtn/":function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var i=n("Womt"),o=n("6dJA"),a=n("Ng1w"),s=n("G1Ma");class r extends s["b"]{constructor(t,e){super(),this.scene=t,this.camera=e,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(t,e,n){const i=t.getContext(),o=t.state;let a,s;o.buffers.color.setMask(!1),o.buffers.depth.setMask(!1),o.buffers.color.setLocked(!0),o.buffers.depth.setLocked(!0),this.inverse?(a=0,s=1):(a=1,s=0),o.buffers.stencil.setTest(!0),o.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),o.buffers.stencil.setFunc(i.ALWAYS,a,4294967295),o.buffers.stencil.setClear(s),o.buffers.stencil.setLocked(!0),t.setRenderTarget(n),this.clear&&t.clear(),t.render(this.scene,this.camera),t.setRenderTarget(e),this.clear&&t.clear(),t.render(this.scene,this.camera),o.buffers.color.setLocked(!1),o.buffers.depth.setLocked(!1),o.buffers.stencil.setLocked(!1),o.buffers.stencil.setFunc(i.EQUAL,1,4294967295),o.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),o.buffers.stencil.setLocked(!0)}}class l extends s["b"]{constructor(){super(),this.needsSwap=!1}render(t){t.state.buffers.stencil.setLocked(!1),t.state.buffers.stencil.setTest(!1)}}class h{constructor(t,e){if(this.renderer=t,void 0===e){const n=t.getSize(new i["Vector2"]);this._pixelRatio=t.getPixelRatio(),this._width=n.width,this._height=n.height,e=new i["WebGLRenderTarget"](this._width*this._pixelRatio,this._height*this._pixelRatio),e.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=e.width,this._height=e.height;this.renderTarget1=e,this.renderTarget2=e.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new a["a"](o["a"]),this.clock=new i["Clock"]}swapBuffers(){const t=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=t}addPass(t){this.passes.push(t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(t,e){this.passes.splice(e,0,t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(t){const e=this.passes.indexOf(t);-1!==e&&this.passes.splice(e,1)}isLastEnabledPass(t){for(let e=t+1;e<this.passes.length;e++)if(this.passes[e].enabled)return!1;return!0}render(t){void 0===t&&(t=this.clock.getDelta());const e=this.renderer.getRenderTarget();let n=!1;for(let i=0,o=this.passes.length;i<o;i++){const e=this.passes[i];if(!1!==e.enabled){if(e.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),e.render(this.renderer,this.writeBuffer,this.readBuffer,t,n),e.needsSwap){if(n){const e=this.renderer.getContext(),n=this.renderer.state.buffers.stencil;n.setFunc(e.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,t),n.setFunc(e.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==r&&(e instanceof r?n=!0:e instanceof l&&(n=!1))}}this.renderer.setRenderTarget(e)}reset(t){if(void 0===t){const e=this.renderer.getSize(new i["Vector2"]);this._pixelRatio=this.renderer.getPixelRatio(),this._width=e.width,this._height=e.height,t=this.renderTarget1.clone(),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(t,e){this._width=t,this._height=e;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let o=0;o<this.passes.length;o++)this.passes[o].setSize(n,i)}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}},Ng1w:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var i=n("Womt"),o=n("G1Ma");class a extends o["b"]{constructor(t,e){super(),this.textureID=void 0!==e?e:"tDiffuse",t instanceof i["ShaderMaterial"]?(this.uniforms=t.uniforms,this.material=t):t&&(this.uniforms=i["UniformsUtils"].clone(t.uniforms),this.material=new i["ShaderMaterial"]({defines:Object.assign({},t.defines),uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader})),this.fsQuad=new o["a"](this.material)}render(t,e,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),this.fsQuad.render(t))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}},RyHr:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var i=n("Womt");const o={type:"change"},a={type:"start"},s={type:"end"};class r extends i["EventDispatcher"]{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new i["Vector3"],this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:i["MOUSE"].ROTATE,MIDDLE:i["MOUSE"].DOLLY,RIGHT:i["MOUSE"].PAN},this.touches={ONE:i["TOUCH"].ROTATE,TWO:i["TOUCH"].DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return c.phi},this.getAzimuthalAngle=function(){return c.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(t){t.addEventListener("keydown",at),this._domElementKeyEvents=t},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",at),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(o),n.update(),l=r.NONE},this.update=function(){const e=new i["Vector3"],a=(new i["Quaternion"]).setFromUnitVectors(t.up,new i["Vector3"](0,1,0)),s=a.clone().invert(),f=new i["Vector3"],y=new i["Quaternion"],g=2*Math.PI;return function(){const t=n.object.position;e.copy(t).sub(n.target),e.applyQuaternion(a),c.setFromVector3(e),n.autoRotate&&l===r.NONE&&I(T()),n.enableDamping?(c.theta+=d.theta*n.dampingFactor,c.phi+=d.phi*n.dampingFactor):(c.theta+=d.theta,c.phi+=d.phi);let i=n.minAzimuthAngle,b=n.maxAzimuthAngle;return isFinite(i)&&isFinite(b)&&(i<-Math.PI?i+=g:i>Math.PI&&(i-=g),b<-Math.PI?b+=g:b>Math.PI&&(b-=g),c.theta=i<=b?Math.max(i,Math.min(b,c.theta)):c.theta>(i+b)/2?Math.max(i,c.theta):Math.min(b,c.theta)),c.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,c.phi)),c.makeSafe(),c.radius*=p,c.radius=Math.max(n.minDistance,Math.min(n.maxDistance,c.radius)),!0===n.enableDamping?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),e.setFromSpherical(c),e.applyQuaternion(s),t.copy(n.target).add(e),n.object.lookAt(n.target),!0===n.enableDamping?(d.theta*=1-n.dampingFactor,d.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(d.set(0,0,0),u.set(0,0,0)),p=1,!!(m||f.distanceToSquared(n.object.position)>h||8*(1-y.dot(n.object.quaternion))>h)&&(n.dispatchEvent(o),f.copy(n.object.position),y.copy(n.object.quaternion),m=!1,!0)}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",lt),n.domElement.removeEventListener("pointerdown",$),n.domElement.removeEventListener("pointercancel",et),n.domElement.removeEventListener("wheel",ot),n.domElement.removeEventListener("pointermove",tt),n.domElement.removeEventListener("pointerup",et),null!==n._domElementKeyEvents&&(n._domElementKeyEvents.removeEventListener("keydown",at),n._domElementKeyEvents=null)};const n=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let l=r.NONE;const h=1e-6,c=new i["Spherical"],d=new i["Spherical"];let p=1;const u=new i["Vector3"];let m=!1;const f=new i["Vector2"],y=new i["Vector2"],g=new i["Vector2"],b=new i["Vector2"],w=new i["Vector2"],E=new i["Vector2"],M=new i["Vector2"],v=new i["Vector2"],x=new i["Vector2"],S=[],P={};function T(){return 2*Math.PI/60/60*n.autoRotateSpeed}function A(){return Math.pow(.95,n.zoomSpeed)}function I(t){d.theta-=t}function _(t){d.phi-=t}const O=function(){const t=new i["Vector3"];return function(e,n){t.setFromMatrixColumn(n,0),t.multiplyScalar(-e),u.add(t)}}(),R=function(){const t=new i["Vector3"];return function(e,i){!0===n.screenSpacePanning?t.setFromMatrixColumn(i,1):(t.setFromMatrixColumn(i,0),t.crossVectors(n.object.up,t)),t.multiplyScalar(e),u.add(t)}}(),N=function(){const t=new i["Vector3"];return function(e,i){const o=n.domElement;if(n.object.isPerspectiveCamera){const a=n.object.position;t.copy(a).sub(n.target);let s=t.length();s*=Math.tan(n.object.fov/2*Math.PI/180),O(2*e*s/o.clientHeight,n.object.matrix),R(2*i*s/o.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(O(e*(n.object.right-n.object.left)/n.object.zoom/o.clientWidth,n.object.matrix),R(i*(n.object.top-n.object.bottom)/n.object.zoom/o.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function C(t){n.object.isPerspectiveCamera?p/=t:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*t)),n.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function L(t){n.object.isPerspectiveCamera?p*=t:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/t)),n.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function D(t){f.set(t.clientX,t.clientY)}function F(t){M.set(t.clientX,t.clientY)}function Y(t){b.set(t.clientX,t.clientY)}function k(t){y.set(t.clientX,t.clientY),g.subVectors(y,f).multiplyScalar(n.rotateSpeed);const e=n.domElement;I(2*Math.PI*g.x/e.clientHeight),_(2*Math.PI*g.y/e.clientHeight),f.copy(y),n.update()}function Q(t){v.set(t.clientX,t.clientY),x.subVectors(v,M),x.y>0?C(A()):x.y<0&&L(A()),M.copy(v),n.update()}function U(t){w.set(t.clientX,t.clientY),E.subVectors(w,b).multiplyScalar(n.panSpeed),N(E.x,E.y),b.copy(w),n.update()}function H(t){t.deltaY<0?L(A()):t.deltaY>0&&C(A()),n.update()}function V(t){let e=!1;switch(t.code){case n.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?_(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):N(0,n.keyPanSpeed),e=!0;break;case n.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?_(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):N(0,-n.keyPanSpeed),e=!0;break;case n.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?I(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):N(n.keyPanSpeed,0),e=!0;break;case n.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?I(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):N(-n.keyPanSpeed,0),e=!0;break}e&&(t.preventDefault(),n.update())}function X(){if(1===S.length)f.set(S[0].pageX,S[0].pageY);else{const t=.5*(S[0].pageX+S[1].pageX),e=.5*(S[0].pageY+S[1].pageY);f.set(t,e)}}function j(){if(1===S.length)b.set(S[0].pageX,S[0].pageY);else{const t=.5*(S[0].pageX+S[1].pageX),e=.5*(S[0].pageY+S[1].pageY);b.set(t,e)}}function G(){const t=S[0].pageX-S[1].pageX,e=S[0].pageY-S[1].pageY,n=Math.sqrt(t*t+e*e);M.set(0,n)}function z(){n.enableZoom&&G(),n.enablePan&&j()}function Z(){n.enableZoom&&G(),n.enableRotate&&X()}function B(t){if(1==S.length)y.set(t.pageX,t.pageY);else{const e=pt(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);y.set(n,i)}g.subVectors(y,f).multiplyScalar(n.rotateSpeed);const e=n.domElement;I(2*Math.PI*g.x/e.clientHeight),_(2*Math.PI*g.y/e.clientHeight),f.copy(y)}function W(t){if(1===S.length)w.set(t.pageX,t.pageY);else{const e=pt(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);w.set(n,i)}E.subVectors(w,b).multiplyScalar(n.panSpeed),N(E.x,E.y),b.copy(w)}function q(t){const e=pt(t),i=t.pageX-e.x,o=t.pageY-e.y,a=Math.sqrt(i*i+o*o);v.set(0,a),x.set(0,Math.pow(v.y/M.y,n.zoomSpeed)),C(x.y),M.copy(v)}function K(t){n.enableZoom&&q(t),n.enablePan&&W(t)}function J(t){n.enableZoom&&q(t),n.enableRotate&&B(t)}function $(t){!1!==n.enabled&&(0===S.length&&(n.domElement.setPointerCapture(t.pointerId),n.domElement.addEventListener("pointermove",tt),n.domElement.addEventListener("pointerup",et)),ht(t),"touch"===t.pointerType?st(t):nt(t))}function tt(t){!1!==n.enabled&&("touch"===t.pointerType?rt(t):it(t))}function et(t){ct(t),0===S.length&&(n.domElement.releasePointerCapture(t.pointerId),n.domElement.removeEventListener("pointermove",tt),n.domElement.removeEventListener("pointerup",et)),n.dispatchEvent(s),l=r.NONE}function nt(t){let e;switch(t.button){case 0:e=n.mouseButtons.LEFT;break;case 1:e=n.mouseButtons.MIDDLE;break;case 2:e=n.mouseButtons.RIGHT;break;default:e=-1}switch(e){case i["MOUSE"].DOLLY:if(!1===n.enableZoom)return;F(t),l=r.DOLLY;break;case i["MOUSE"].ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===n.enablePan)return;Y(t),l=r.PAN}else{if(!1===n.enableRotate)return;D(t),l=r.ROTATE}break;case i["MOUSE"].PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===n.enableRotate)return;D(t),l=r.ROTATE}else{if(!1===n.enablePan)return;Y(t),l=r.PAN}break;default:l=r.NONE}l!==r.NONE&&n.dispatchEvent(a)}function it(t){switch(l){case r.ROTATE:if(!1===n.enableRotate)return;k(t);break;case r.DOLLY:if(!1===n.enableZoom)return;Q(t);break;case r.PAN:if(!1===n.enablePan)return;U(t);break}}function ot(t){!1!==n.enabled&&!1!==n.enableZoom&&l===r.NONE&&(t.preventDefault(),n.dispatchEvent(a),H(t),n.dispatchEvent(s))}function at(t){!1!==n.enabled&&!1!==n.enablePan&&V(t)}function st(t){switch(dt(t),S.length){case 1:switch(n.touches.ONE){case i["TOUCH"].ROTATE:if(!1===n.enableRotate)return;X(),l=r.TOUCH_ROTATE;break;case i["TOUCH"].PAN:if(!1===n.enablePan)return;j(),l=r.TOUCH_PAN;break;default:l=r.NONE}break;case 2:switch(n.touches.TWO){case i["TOUCH"].DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;z(),l=r.TOUCH_DOLLY_PAN;break;case i["TOUCH"].DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;Z(),l=r.TOUCH_DOLLY_ROTATE;break;default:l=r.NONE}break;default:l=r.NONE}l!==r.NONE&&n.dispatchEvent(a)}function rt(t){switch(dt(t),l){case r.TOUCH_ROTATE:if(!1===n.enableRotate)return;B(t),n.update();break;case r.TOUCH_PAN:if(!1===n.enablePan)return;W(t),n.update();break;case r.TOUCH_DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;K(t),n.update();break;case r.TOUCH_DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;J(t),n.update();break;default:l=r.NONE}}function lt(t){!1!==n.enabled&&t.preventDefault()}function ht(t){S.push(t)}function ct(t){delete P[t.pointerId];for(let e=0;e<S.length;e++)if(S[e].pointerId==t.pointerId)return void S.splice(e,1)}function dt(t){let e=P[t.pointerId];void 0===e&&(e=new i["Vector2"],P[t.pointerId]=e),e.set(t.pageX,t.pageY)}function pt(t){const e=t.pointerId===S[0].pointerId?S[1]:S[0];return P[e.pointerId]}n.domElement.addEventListener("contextmenu",lt),n.domElement.addEventListener("pointerdown",$),n.domElement.addEventListener("pointercancel",et),n.domElement.addEventListener("wheel",ot,{passive:!1}),this.update()}}},bBhY:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var i=n("Womt");const o={uniforms:{tDiffuse:{value:null},resolution:{value:new i["Vector2"](1/1024,1/512)}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\tprecision highp float;\n\n\tuniform sampler2D tDiffuse;\n\n\tuniform vec2 resolution;\n\n\tvarying vec2 vUv;\n\n\t// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)\n\n\t//----------------------------------------------------------------------------------\n\t// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag\n\t// SDK Version: v3.00\n\t// Email:       gameworks@nvidia.com\n\t// Site:        http://developer.nvidia.com/\n\t//\n\t// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.\n\t//\n\t// Redistribution and use in source and binary forms, with or without\n\t// modification, are permitted provided that the following conditions\n\t// are met:\n\t//  * Redistributions of source code must retain the above copyright\n\t//    notice, this list of conditions and the following disclaimer.\n\t//  * Redistributions in binary form must reproduce the above copyright\n\t//    notice, this list of conditions and the following disclaimer in the\n\t//    documentation and/or other materials provided with the distribution.\n\t//  * Neither the name of NVIDIA CORPORATION nor the names of its\n\t//    contributors may be used to endorse or promote products derived\n\t//    from this software without specific prior written permission.\n\t//\n\t// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ''AS IS'' AND ANY\n\t// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\t// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\t// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\t// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\t// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\t// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\t// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\t// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t//\n\t//----------------------------------------------------------------------------------\n\n\t#ifndef FXAA_DISCARD\n\t\t\t//\n\t\t\t// Only valid for PC OpenGL currently.\n\t\t\t// Probably will not work when FXAA_GREEN_AS_LUMA = 1.\n\t\t\t//\n\t\t\t// 1 = Use discard on pixels which don't need AA.\n\t\t\t//     For APIs which enable concurrent TEX+ROP from same surface.\n\t\t\t// 0 = Return unchanged color on pixels which don't need AA.\n\t\t\t//\n\t\t\t#define FXAA_DISCARD 0\n\t#endif\n\n\t/*--------------------------------------------------------------------------*/\n\t#define FxaaTexTop(t, p) texture2D(t, p, -100.0)\n\t#define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), -100.0)\n\t/*--------------------------------------------------------------------------*/\n\n\t#define NUM_SAMPLES 5\n\n\t// assumes colors have premultipliedAlpha, so that the calculated color contrast is scaled by alpha\n\tfloat contrast( vec4 a, vec4 b ) {\n\t\t\tvec4 diff = abs( a - b );\n\t\t\treturn max( max( max( diff.r, diff.g ), diff.b ), diff.a );\n\t}\n\n\t/*============================================================================\n\n\t\t\t\t\t\t\t\t\tFXAA3 QUALITY - PC\n\n\t============================================================================*/\n\n\t/*--------------------------------------------------------------------------*/\n\tvec4 FxaaPixelShader(\n\t\t\tvec2 posM,\n\t\t\tsampler2D tex,\n\t\t\tvec2 fxaaQualityRcpFrame,\n\t\t\tfloat fxaaQualityEdgeThreshold,\n\t\t\tfloat fxaaQualityinvEdgeThreshold\n\t) {\n\t\t\tvec4 rgbaM = FxaaTexTop(tex, posM);\n\t\t\tvec4 rgbaS = FxaaTexOff(tex, posM, vec2( 0.0, 1.0), fxaaQualityRcpFrame.xy);\n\t\t\tvec4 rgbaE = FxaaTexOff(tex, posM, vec2( 1.0, 0.0), fxaaQualityRcpFrame.xy);\n\t\t\tvec4 rgbaN = FxaaTexOff(tex, posM, vec2( 0.0,-1.0), fxaaQualityRcpFrame.xy);\n\t\t\tvec4 rgbaW = FxaaTexOff(tex, posM, vec2(-1.0, 0.0), fxaaQualityRcpFrame.xy);\n\t\t\t// . S .\n\t\t\t// W M E\n\t\t\t// . N .\n\n\t\t\tbool earlyExit = max( max( max(\n\t\t\t\t\tcontrast( rgbaM, rgbaN ),\n\t\t\t\t\tcontrast( rgbaM, rgbaS ) ),\n\t\t\t\t\tcontrast( rgbaM, rgbaE ) ),\n\t\t\t\t\tcontrast( rgbaM, rgbaW ) )\n\t\t\t\t\t< fxaaQualityEdgeThreshold;\n\t\t\t// . 0 .\n\t\t\t// 0 0 0\n\t\t\t// . 0 .\n\n\t\t\t#if (FXAA_DISCARD == 1)\n\t\t\t\t\tif(earlyExit) FxaaDiscard;\n\t\t\t#else\n\t\t\t\t\tif(earlyExit) return rgbaM;\n\t\t\t#endif\n\n\t\t\tfloat contrastN = contrast( rgbaM, rgbaN );\n\t\t\tfloat contrastS = contrast( rgbaM, rgbaS );\n\t\t\tfloat contrastE = contrast( rgbaM, rgbaE );\n\t\t\tfloat contrastW = contrast( rgbaM, rgbaW );\n\n\t\t\tfloat relativeVContrast = ( contrastN + contrastS ) - ( contrastE + contrastW );\n\t\t\trelativeVContrast *= fxaaQualityinvEdgeThreshold;\n\n\t\t\tbool horzSpan = relativeVContrast > 0.;\n\t\t\t// . 1 .\n\t\t\t// 0 0 0\n\t\t\t// . 1 .\n\n\t\t\t// 45 deg edge detection and corners of objects, aka V/H contrast is too similar\n\t\t\tif( abs( relativeVContrast ) < .3 ) {\n\t\t\t\t\t// locate the edge\n\t\t\t\t\tvec2 dirToEdge;\n\t\t\t\t\tdirToEdge.x = contrastE > contrastW ? 1. : -1.;\n\t\t\t\t\tdirToEdge.y = contrastS > contrastN ? 1. : -1.;\n\t\t\t\t\t// . 2 .      . 1 .\n\t\t\t\t\t// 1 0 2  ~=  0 0 1\n\t\t\t\t\t// . 1 .      . 0 .\n\n\t\t\t\t\t// tap 2 pixels and see which ones are \"outside\" the edge, to\n\t\t\t\t\t// determine if the edge is vertical or horizontal\n\n\t\t\t\t\tvec4 rgbaAlongH = FxaaTexOff(tex, posM, vec2( dirToEdge.x, -dirToEdge.y ), fxaaQualityRcpFrame.xy);\n\t\t\t\t\tfloat matchAlongH = contrast( rgbaM, rgbaAlongH );\n\t\t\t\t\t// . 1 .\n\t\t\t\t\t// 0 0 1\n\t\t\t\t\t// . 0 H\n\n\t\t\t\t\tvec4 rgbaAlongV = FxaaTexOff(tex, posM, vec2( -dirToEdge.x, dirToEdge.y ), fxaaQualityRcpFrame.xy);\n\t\t\t\t\tfloat matchAlongV = contrast( rgbaM, rgbaAlongV );\n\t\t\t\t\t// V 1 .\n\t\t\t\t\t// 0 0 1\n\t\t\t\t\t// . 0 .\n\n\t\t\t\t\trelativeVContrast = matchAlongV - matchAlongH;\n\t\t\t\t\trelativeVContrast *= fxaaQualityinvEdgeThreshold;\n\n\t\t\t\t\tif( abs( relativeVContrast ) < .3 ) { // 45 deg edge\n\t\t\t\t\t\t\t// 1 1 .\n\t\t\t\t\t\t\t// 0 0 1\n\t\t\t\t\t\t\t// . 0 1\n\n\t\t\t\t\t\t\t// do a simple blur\n\t\t\t\t\t\t\treturn mix(\n\t\t\t\t\t\t\t\t\trgbaM,\n\t\t\t\t\t\t\t\t\t(rgbaN + rgbaS + rgbaE + rgbaW) * .25,\n\t\t\t\t\t\t\t\t\t.4\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\thorzSpan = relativeVContrast > 0.;\n\t\t\t}\n\n\t\t\tif(!horzSpan) rgbaN = rgbaW;\n\t\t\tif(!horzSpan) rgbaS = rgbaE;\n\t\t\t// . 0 .      1\n\t\t\t// 1 0 1  ->  0\n\t\t\t// . 0 .      1\n\n\t\t\tbool pairN = contrast( rgbaM, rgbaN ) > contrast( rgbaM, rgbaS );\n\t\t\tif(!pairN) rgbaN = rgbaS;\n\n\t\t\tvec2 offNP;\n\t\t\toffNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\n\t\t\toffNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\n\n\t\t\tbool doneN = false;\n\t\t\tbool doneP = false;\n\n\t\t\tfloat nDist = 0.;\n\t\t\tfloat pDist = 0.;\n\n\t\t\tvec2 posN = posM;\n\t\t\tvec2 posP = posM;\n\n\t\t\tint iterationsUsed = 0;\n\t\t\tint iterationsUsedN = 0;\n\t\t\tint iterationsUsedP = 0;\n\t\t\tfor( int i = 0; i < NUM_SAMPLES; i++ ) {\n\t\t\t\t\titerationsUsed = i;\n\n\t\t\t\t\tfloat increment = float(i + 1);\n\n\t\t\t\t\tif(!doneN) {\n\t\t\t\t\t\t\tnDist += increment;\n\t\t\t\t\t\t\tposN = posM + offNP * nDist;\n\t\t\t\t\t\t\tvec4 rgbaEndN = FxaaTexTop(tex, posN.xy);\n\t\t\t\t\t\t\tdoneN = contrast( rgbaEndN, rgbaM ) > contrast( rgbaEndN, rgbaN );\n\t\t\t\t\t\t\titerationsUsedN = i;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!doneP) {\n\t\t\t\t\t\t\tpDist += increment;\n\t\t\t\t\t\t\tposP = posM - offNP * pDist;\n\t\t\t\t\t\t\tvec4 rgbaEndP = FxaaTexTop(tex, posP.xy);\n\t\t\t\t\t\t\tdoneP = contrast( rgbaEndP, rgbaM ) > contrast( rgbaEndP, rgbaN );\n\t\t\t\t\t\t\titerationsUsedP = i;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(doneN || doneP) break;\n\t\t\t}\n\n\n\t\t\tif ( !doneP && !doneN ) return rgbaM; // failed to find end of edge\n\n\t\t\tfloat dist = min(\n\t\t\t\t\tdoneN ? float( iterationsUsedN ) / float( NUM_SAMPLES - 1 ) : 1.,\n\t\t\t\t\tdoneP ? float( iterationsUsedP ) / float( NUM_SAMPLES - 1 ) : 1.\n\t\t\t);\n\n\t\t\t// hacky way of reduces blurriness of mostly diagonal edges\n\t\t\t// but reduces AA quality\n\t\t\tdist = pow(dist, .5);\n\n\t\t\tdist = 1. - dist;\n\n\t\t\treturn mix(\n\t\t\t\t\trgbaM,\n\t\t\t\t\trgbaN,\n\t\t\t\t\tdist * .5\n\t\t\t);\n\t}\n\n\tvoid main() {\n\t\t\tconst float edgeDetectionQuality = .2;\n\t\t\tconst float invEdgeDetectionQuality = 1. / edgeDetectionQuality;\n\n\t\t\tgl_FragColor = FxaaPixelShader(\n\t\t\t\t\tvUv,\n\t\t\t\t\ttDiffuse,\n\t\t\t\t\tresolution,\n\t\t\t\t\tedgeDetectionQuality, // [0,1] contrast needed, otherwise early discard\n\t\t\t\t\tinvEdgeDetectionQuality\n\t\t\t);\n\n\t}\n\t"}},"k+my":function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var i=n("Womt"),o=n("G1Ma");class a extends o["b"]{constructor(t,e,n,o,a){super(),this.scene=t,this.camera=e,this.overrideMaterial=n,this.clearColor=o,this.clearAlpha=void 0!==a?a:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new i["Color"]}render(t,e,n){const i=t.autoClear;let o,a;t.autoClear=!1,void 0!==this.overrideMaterial&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(t.getClearColor(this._oldClearColor),o=t.getClearAlpha(),t.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&t.clearDepth(),t.setRenderTarget(this.renderToScreen?null:n),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),t.render(this.scene,this.camera),this.clearColor&&t.setClearColor(this._oldClearColor,o),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=a),t.autoClear=i}}},sfEl:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var i=n("Womt");const o=new i["Raycaster"],a=new i["Vector3"],s=new i["Vector3"],r=new i["Quaternion"],l={X:new i["Vector3"](1,0,0),Y:new i["Vector3"](0,1,0),Z:new i["Vector3"](0,0,1)},h={type:"change"},c={type:"mouseDown"},d={type:"mouseUp",mode:null},p={type:"objectChange"};class u extends i["Object3D"]{constructor(t,e){super(),void 0===e&&(console.warn('THREE.TransformControls: The second parameter "domElement" is now mandatory.'),e=document),this.isTransformControls=!0,this.visible=!1,this.domElement=e,this.domElement.style.touchAction="none";const n=new L;this._gizmo=n,this.add(n);const o=new D;this._plane=o,this.add(o);const a=this;function s(t,e){let i=e;Object.defineProperty(a,t,{get:function(){return void 0!==i?i:e},set:function(e){i!==e&&(i=e,o[t]=e,n[t]=e,a.dispatchEvent({type:t+"-changed",value:e}),a.dispatchEvent(h))}}),a[t]=e,o[t]=e,n[t]=e}s("camera",t),s("object",void 0),s("enabled",!0),s("axis",null),s("mode","translate"),s("translationSnap",null),s("rotationSnap",null),s("scaleSnap",null),s("space","world"),s("size",1),s("dragging",!1),s("showX",!0),s("showY",!0),s("showZ",!0);const r=new i["Vector3"],l=new i["Vector3"],c=new i["Quaternion"],d=new i["Quaternion"],p=new i["Vector3"],u=new i["Quaternion"],w=new i["Vector3"],E=new i["Vector3"],M=new i["Vector3"],v=0,x=new i["Vector3"];s("worldPosition",r),s("worldPositionStart",l),s("worldQuaternion",c),s("worldQuaternionStart",d),s("cameraPosition",p),s("cameraQuaternion",u),s("pointStart",w),s("pointEnd",E),s("rotationAxis",M),s("rotationAngle",v),s("eye",x),this._offset=new i["Vector3"],this._startNorm=new i["Vector3"],this._endNorm=new i["Vector3"],this._cameraScale=new i["Vector3"],this._parentPosition=new i["Vector3"],this._parentQuaternion=new i["Quaternion"],this._parentQuaternionInv=new i["Quaternion"],this._parentScale=new i["Vector3"],this._worldScaleStart=new i["Vector3"],this._worldQuaternionInv=new i["Quaternion"],this._worldScale=new i["Vector3"],this._positionStart=new i["Vector3"],this._quaternionStart=new i["Quaternion"],this._scaleStart=new i["Vector3"],this._getPointer=m.bind(this),this._onPointerDown=y.bind(this),this._onPointerHover=f.bind(this),this._onPointerMove=g.bind(this),this._onPointerUp=b.bind(this),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp)}updateMatrixWorld(){void 0!==this.object&&(this.object.updateMatrixWorld(),null===this.object.parent?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):this.object.parent.matrixWorld.decompose(this._parentPosition,this._parentQuaternion,this._parentScale),this.object.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this._worldScale),this._parentQuaternionInv.copy(this._parentQuaternion).invert(),this._worldQuaternionInv.copy(this.worldQuaternion).invert()),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(this.cameraPosition,this.cameraQuaternion,this._cameraScale),this.camera.isOrthographicCamera?this.camera.getWorldDirection(this.eye).negate():this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize(),super.updateMatrixWorld(this)}pointerHover(t){if(void 0===this.object||!0===this.dragging)return;o.setFromCamera(t,this.camera);const e=w(this._gizmo.picker[this.mode],o);this.axis=e?e.object.name:null}pointerDown(t){if(void 0!==this.object&&!0!==this.dragging&&0===t.button&&null!==this.axis){o.setFromCamera(t,this.camera);const e=w(this._plane,o,!0);e&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(e.point).sub(this.worldPositionStart)),this.dragging=!0,c.mode=this.mode,this.dispatchEvent(c)}}pointerMove(t){const e=this.axis,n=this.mode,i=this.object;let c=this.space;if("scale"===n?c="local":"E"!==e&&"XYZE"!==e&&"XYZ"!==e||(c="world"),void 0===i||null===e||!1===this.dragging||-1!==t.button)return;o.setFromCamera(t,this.camera);const d=w(this._plane,o,!0);if(d){if(this.pointEnd.copy(d.point).sub(this.worldPositionStart),"translate"===n)this._offset.copy(this.pointEnd).sub(this.pointStart),"local"===c&&"XYZ"!==e&&this._offset.applyQuaternion(this._worldQuaternionInv),-1===e.indexOf("X")&&(this._offset.x=0),-1===e.indexOf("Y")&&(this._offset.y=0),-1===e.indexOf("Z")&&(this._offset.z=0),"local"===c&&"XYZ"!==e?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),i.position.copy(this._offset).add(this._positionStart),this.translationSnap&&("local"===c&&(i.position.applyQuaternion(r.copy(this._quaternionStart).invert()),-1!==e.search("X")&&(i.position.x=Math.round(i.position.x/this.translationSnap)*this.translationSnap),-1!==e.search("Y")&&(i.position.y=Math.round(i.position.y/this.translationSnap)*this.translationSnap),-1!==e.search("Z")&&(i.position.z=Math.round(i.position.z/this.translationSnap)*this.translationSnap),i.position.applyQuaternion(this._quaternionStart)),"world"===c&&(i.parent&&i.position.add(a.setFromMatrixPosition(i.parent.matrixWorld)),-1!==e.search("X")&&(i.position.x=Math.round(i.position.x/this.translationSnap)*this.translationSnap),-1!==e.search("Y")&&(i.position.y=Math.round(i.position.y/this.translationSnap)*this.translationSnap),-1!==e.search("Z")&&(i.position.z=Math.round(i.position.z/this.translationSnap)*this.translationSnap),i.parent&&i.position.sub(a.setFromMatrixPosition(i.parent.matrixWorld))));else if("scale"===n){if(-1!==e.search("XYZ")){let t=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(t*=-1),s.set(t,t,t)}else a.copy(this.pointStart),s.copy(this.pointEnd),a.applyQuaternion(this._worldQuaternionInv),s.applyQuaternion(this._worldQuaternionInv),s.divide(a),-1===e.search("X")&&(s.x=1),-1===e.search("Y")&&(s.y=1),-1===e.search("Z")&&(s.z=1);i.scale.copy(this._scaleStart).multiply(s),this.scaleSnap&&(-1!==e.search("X")&&(i.scale.x=Math.round(i.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==e.search("Y")&&(i.scale.y=Math.round(i.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==e.search("Z")&&(i.scale.z=Math.round(i.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if("rotate"===n){this._offset.copy(this.pointEnd).sub(this.pointStart);const t=20/this.worldPosition.distanceTo(a.setFromMatrixPosition(this.camera.matrixWorld));"E"===e?(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1):"XYZE"===e?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(a.copy(this.rotationAxis).cross(this.eye))*t):"X"!==e&&"Y"!==e&&"Z"!==e||(this.rotationAxis.copy(l[e]),a.copy(l[e]),"local"===c&&a.applyQuaternion(this.worldQuaternion),this.rotationAngle=this._offset.dot(a.cross(this.eye).normalize())*t),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),"local"===c&&"E"!==e&&"XYZE"!==e?(i.quaternion.copy(this._quaternionStart),i.quaternion.multiply(r.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),i.quaternion.copy(r.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),i.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(h),this.dispatchEvent(p)}}pointerUp(t){0===t.button&&(this.dragging&&null!==this.axis&&(d.mode=this.mode,this.dispatchEvent(d)),this.dragging=!1,this.axis=null)}dispose(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.traverse((function(t){t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()}))}attach(t){return this.object=t,this.visible=!0,this}detach(){return this.object=void 0,this.visible=!1,this.axis=null,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(h),this.dispatchEvent(p),this.pointStart.copy(this.pointEnd))}getRaycaster(){return o}getMode(){return this.mode}setMode(t){this.mode=t}setTranslationSnap(t){this.translationSnap=t}setRotationSnap(t){this.rotationSnap=t}setScaleSnap(t){this.scaleSnap=t}setSize(t){this.size=t}setSpace(t){this.space=t}}function m(t){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:t.button};{const e=this.domElement.getBoundingClientRect();return{x:(t.clientX-e.left)/e.width*2-1,y:-(t.clientY-e.top)/e.height*2+1,button:t.button}}}function f(t){if(this.enabled)switch(t.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(t));break}}function y(t){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(t)),this.pointerDown(this._getPointer(t)))}function g(t){this.enabled&&this.pointerMove(this._getPointer(t))}function b(t){this.enabled&&(this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(t)))}function w(t,e,n){const i=e.intersectObject(t,!0);for(let o=0;o<i.length;o++)if(i[o].object.visible||n)return i[o];return!1}const E=new i["Euler"],M=new i["Vector3"](0,1,0),v=new i["Vector3"](0,0,0),x=new i["Matrix4"],S=new i["Quaternion"],P=new i["Quaternion"],T=new i["Vector3"],A=new i["Matrix4"],I=new i["Vector3"](1,0,0),_=new i["Vector3"](0,1,0),O=new i["Vector3"](0,0,1),R=new i["Vector3"],N=new i["Vector3"],C=new i["Vector3"];class L extends i["Object3D"]{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const t=new i["MeshBasicMaterial"]({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),e=new i["LineBasicMaterial"]({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),n=t.clone();n.opacity=.15;const o=e.clone();o.opacity=.5;const a=t.clone();a.color.setHex(16711680);const s=t.clone();s.color.setHex(65280);const r=t.clone();r.color.setHex(255);const l=t.clone();l.color.setHex(16711680),l.opacity=.5;const h=t.clone();h.color.setHex(65280),h.opacity=.5;const c=t.clone();c.color.setHex(255),c.opacity=.5;const d=t.clone();d.opacity=.25;const p=t.clone();p.color.setHex(16776960),p.opacity=.25;const u=t.clone();u.color.setHex(16776960);const m=t.clone();m.color.setHex(7895160);const f=new i["CylinderGeometry"](0,.04,.1,12);f.translate(0,.05,0);const y=new i["BoxGeometry"](.08,.08,.08);y.translate(0,.04,0);const g=new i["BufferGeometry"];g.setAttribute("position",new i["Float32BufferAttribute"]([0,0,0,1,0,0],3));const b=new i["CylinderGeometry"](.0075,.0075,.5,3);function w(t,e){const n=new i["TorusGeometry"](t,.0075,3,64,e*Math.PI*2);return n.rotateY(Math.PI/2),n.rotateX(Math.PI/2),n}function E(){const t=new i["BufferGeometry"];return t.setAttribute("position",new i["Float32BufferAttribute"]([0,0,0,1,1,1],3)),t}b.translate(0,.25,0);const M={X:[[new i["Mesh"](f,a),[.5,0,0],[0,0,-Math.PI/2]],[new i["Mesh"](f,a),[-.5,0,0],[0,0,Math.PI/2]],[new i["Mesh"](b,a),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new i["Mesh"](f,s),[0,.5,0]],[new i["Mesh"](f,s),[0,-.5,0],[Math.PI,0,0]],[new i["Mesh"](b,s)]],Z:[[new i["Mesh"](f,r),[0,0,.5],[Math.PI/2,0,0]],[new i["Mesh"](f,r),[0,0,-.5],[-Math.PI/2,0,0]],[new i["Mesh"](b,r),null,[Math.PI/2,0,0]]],XYZ:[[new i["Mesh"](new i["OctahedronGeometry"](.1,0),d.clone()),[0,0,0]]],XY:[[new i["Mesh"](new i["BoxGeometry"](.15,.15,.01),c.clone()),[.15,.15,0]]],YZ:[[new i["Mesh"](new i["BoxGeometry"](.15,.15,.01),l.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new i["Mesh"](new i["BoxGeometry"](.15,.15,.01),h.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},v={X:[[new i["Mesh"](new i["CylinderGeometry"](.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new i["Mesh"](new i["CylinderGeometry"](.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new i["Mesh"](new i["CylinderGeometry"](.2,0,.6,4),n),[0,.3,0]],[new i["Mesh"](new i["CylinderGeometry"](.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new i["Mesh"](new i["CylinderGeometry"](.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new i["Mesh"](new i["CylinderGeometry"](.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new i["Mesh"](new i["OctahedronGeometry"](.2,0),n)]],XY:[[new i["Mesh"](new i["BoxGeometry"](.2,.2,.01),n),[.15,.15,0]]],YZ:[[new i["Mesh"](new i["BoxGeometry"](.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new i["Mesh"](new i["BoxGeometry"](.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]]},x={START:[[new i["Mesh"](new i["OctahedronGeometry"](.01,2),o),null,null,null,"helper"]],END:[[new i["Mesh"](new i["OctahedronGeometry"](.01,2),o),null,null,null,"helper"]],DELTA:[[new i["Line"](E(),o),null,null,null,"helper"]],X:[[new i["Line"](g,o.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new i["Line"](g,o.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new i["Line"](g,o.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},S={XYZE:[[new i["Mesh"](w(.5,1),m),null,[0,Math.PI/2,0]]],X:[[new i["Mesh"](w(.5,.5),a)]],Y:[[new i["Mesh"](w(.5,.5),s),null,[0,0,-Math.PI/2]]],Z:[[new i["Mesh"](w(.5,.5),r),null,[0,Math.PI/2,0]]],E:[[new i["Mesh"](w(.75,1),p),null,[0,Math.PI/2,0]]]},P={AXIS:[[new i["Line"](g,o.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},T={XYZE:[[new i["Mesh"](new i["SphereGeometry"](.25,10,8),n)]],X:[[new i["Mesh"](new i["TorusGeometry"](.5,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new i["Mesh"](new i["TorusGeometry"](.5,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new i["Mesh"](new i["TorusGeometry"](.5,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new i["Mesh"](new i["TorusGeometry"](.75,.1,2,24),n)]]},A={X:[[new i["Mesh"](y,a),[.5,0,0],[0,0,-Math.PI/2]],[new i["Mesh"](b,a),[0,0,0],[0,0,-Math.PI/2]],[new i["Mesh"](y,a),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new i["Mesh"](y,s),[0,.5,0]],[new i["Mesh"](b,s)],[new i["Mesh"](y,s),[0,-.5,0],[0,0,Math.PI]]],Z:[[new i["Mesh"](y,r),[0,0,.5],[Math.PI/2,0,0]],[new i["Mesh"](b,r),[0,0,0],[Math.PI/2,0,0]],[new i["Mesh"](y,r),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new i["Mesh"](new i["BoxGeometry"](.15,.15,.01),c),[.15,.15,0]]],YZ:[[new i["Mesh"](new i["BoxGeometry"](.15,.15,.01),l),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new i["Mesh"](new i["BoxGeometry"](.15,.15,.01),h),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new i["Mesh"](new i["BoxGeometry"](.1,.1,.1),d.clone())]]},I={X:[[new i["Mesh"](new i["CylinderGeometry"](.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new i["Mesh"](new i["CylinderGeometry"](.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new i["Mesh"](new i["CylinderGeometry"](.2,0,.6,4),n),[0,.3,0]],[new i["Mesh"](new i["CylinderGeometry"](.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new i["Mesh"](new i["CylinderGeometry"](.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new i["Mesh"](new i["CylinderGeometry"](.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new i["Mesh"](new i["BoxGeometry"](.2,.2,.01),n),[.15,.15,0]]],YZ:[[new i["Mesh"](new i["BoxGeometry"](.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new i["Mesh"](new i["BoxGeometry"](.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new i["Mesh"](new i["BoxGeometry"](.2,.2,.2),n),[0,0,0]]]},_={X:[[new i["Line"](g,o.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new i["Line"](g,o.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new i["Line"](g,o.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function O(t){const e=new i["Object3D"];for(const n in t)for(let i=t[n].length;i--;){const o=t[n][i][0].clone(),a=t[n][i][1],s=t[n][i][2],r=t[n][i][3],l=t[n][i][4];o.name=n,o.tag=l,a&&o.position.set(a[0],a[1],a[2]),s&&o.rotation.set(s[0],s[1],s[2]),r&&o.scale.set(r[0],r[1],r[2]),o.updateMatrix();const h=o.geometry.clone();h.applyMatrix4(o.matrix),o.geometry=h,o.renderOrder=1/0,o.position.set(0,0,0),o.rotation.set(0,0,0),o.scale.set(1,1,1),e.add(o)}return e}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo["translate"]=O(M)),this.add(this.gizmo["rotate"]=O(S)),this.add(this.gizmo["scale"]=O(A)),this.add(this.picker["translate"]=O(v)),this.add(this.picker["rotate"]=O(T)),this.add(this.picker["scale"]=O(I)),this.add(this.helper["translate"]=O(x)),this.add(this.helper["rotate"]=O(P)),this.add(this.helper["scale"]=O(_)),this.picker["translate"].visible=!1,this.picker["rotate"].visible=!1,this.picker["scale"].visible=!1}updateMatrixWorld(t){const e="scale"===this.mode?"local":this.space,n="local"===e?this.worldQuaternion:P;this.gizmo["translate"].visible="translate"===this.mode,this.gizmo["rotate"].visible="rotate"===this.mode,this.gizmo["scale"].visible="scale"===this.mode,this.helper["translate"].visible="translate"===this.mode,this.helper["rotate"].visible="rotate"===this.mode,this.helper["scale"].visible="scale"===this.mode;let i=[];i=i.concat(this.picker[this.mode].children),i=i.concat(this.gizmo[this.mode].children),i=i.concat(this.helper[this.mode].children);for(let o=0;o<i.length;o++){const t=i[o];let e;if(t.visible=!0,t.rotation.set(0,0,0),t.position.copy(this.worldPosition),e=this.camera.isOrthographicCamera?(this.camera.top-this.camera.bottom)/this.camera.zoom:this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),t.scale.set(1,1,1).multiplyScalar(e*this.size/4),"helper"!==t.tag){if(t.quaternion.copy(n),"translate"===this.mode||"scale"===this.mode){const e=.99,i=.2;"X"===t.name&&Math.abs(M.copy(I).applyQuaternion(n).dot(this.eye))>e&&(t.scale.set(1e-10,1e-10,1e-10),t.visible=!1),"Y"===t.name&&Math.abs(M.copy(_).applyQuaternion(n).dot(this.eye))>e&&(t.scale.set(1e-10,1e-10,1e-10),t.visible=!1),"Z"===t.name&&Math.abs(M.copy(O).applyQuaternion(n).dot(this.eye))>e&&(t.scale.set(1e-10,1e-10,1e-10),t.visible=!1),"XY"===t.name&&Math.abs(M.copy(O).applyQuaternion(n).dot(this.eye))<i&&(t.scale.set(1e-10,1e-10,1e-10),t.visible=!1),"YZ"===t.name&&Math.abs(M.copy(I).applyQuaternion(n).dot(this.eye))<i&&(t.scale.set(1e-10,1e-10,1e-10),t.visible=!1),"XZ"===t.name&&Math.abs(M.copy(_).applyQuaternion(n).dot(this.eye))<i&&(t.scale.set(1e-10,1e-10,1e-10),t.visible=!1)}else"rotate"===this.mode&&(S.copy(n),M.copy(this.eye).applyQuaternion(r.copy(n).invert()),-1!==t.name.search("E")&&t.quaternion.setFromRotationMatrix(x.lookAt(this.eye,v,_)),"X"===t.name&&(r.setFromAxisAngle(I,Math.atan2(-M.y,M.z)),r.multiplyQuaternions(S,r),t.quaternion.copy(r)),"Y"===t.name&&(r.setFromAxisAngle(_,Math.atan2(M.x,M.z)),r.multiplyQuaternions(S,r),t.quaternion.copy(r)),"Z"===t.name&&(r.setFromAxisAngle(O,Math.atan2(M.y,M.x)),r.multiplyQuaternions(S,r),t.quaternion.copy(r)));t.visible=t.visible&&(-1===t.name.indexOf("X")||this.showX),t.visible=t.visible&&(-1===t.name.indexOf("Y")||this.showY),t.visible=t.visible&&(-1===t.name.indexOf("Z")||this.showZ),t.visible=t.visible&&(-1===t.name.indexOf("E")||this.showX&&this.showY&&this.showZ),t.material._color=t.material._color||t.material.color.clone(),t.material._opacity=t.material._opacity||t.material.opacity,t.material.color.copy(t.material._color),t.material.opacity=t.material._opacity,this.enabled&&this.axis&&(t.name===this.axis||this.axis.split("").some((function(e){return t.name===e})))&&(t.material.color.setHex(16776960),t.material.opacity=1)}else t.visible=!1,"AXIS"===t.name?(t.visible=!!this.axis,"X"===this.axis&&(r.setFromEuler(E.set(0,0,0)),t.quaternion.copy(n).multiply(r),Math.abs(M.copy(I).applyQuaternion(n).dot(this.eye))>.9&&(t.visible=!1)),"Y"===this.axis&&(r.setFromEuler(E.set(0,0,Math.PI/2)),t.quaternion.copy(n).multiply(r),Math.abs(M.copy(_).applyQuaternion(n).dot(this.eye))>.9&&(t.visible=!1)),"Z"===this.axis&&(r.setFromEuler(E.set(0,Math.PI/2,0)),t.quaternion.copy(n).multiply(r),Math.abs(M.copy(O).applyQuaternion(n).dot(this.eye))>.9&&(t.visible=!1)),"XYZE"===this.axis&&(r.setFromEuler(E.set(0,Math.PI/2,0)),M.copy(this.rotationAxis),t.quaternion.setFromRotationMatrix(x.lookAt(v,M,_)),t.quaternion.multiply(r),t.visible=this.dragging),"E"===this.axis&&(t.visible=!1)):"START"===t.name?(t.position.copy(this.worldPositionStart),t.visible=this.dragging):"END"===t.name?(t.position.copy(this.worldPosition),t.visible=this.dragging):"DELTA"===t.name?(t.position.copy(this.worldPositionStart),t.quaternion.copy(this.worldQuaternionStart),a.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),a.applyQuaternion(this.worldQuaternionStart.clone().invert()),t.scale.copy(a),t.visible=this.dragging):(t.quaternion.copy(n),this.dragging?t.position.copy(this.worldPositionStart):t.position.copy(this.worldPosition),this.axis&&(t.visible=-1!==this.axis.search(t.name)))}super.updateMatrixWorld(t)}}class D extends i["Mesh"]{constructor(){super(new i["PlaneGeometry"](1e5,1e5,2,2),new i["MeshBasicMaterial"]({visible:!1,wireframe:!0,side:i["DoubleSide"],transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(t){let e=this.space;switch(this.position.copy(this.worldPosition),"scale"===this.mode&&(e="local"),R.copy(I).applyQuaternion("local"===e?this.worldQuaternion:P),N.copy(_).applyQuaternion("local"===e?this.worldQuaternion:P),C.copy(O).applyQuaternion("local"===e?this.worldQuaternion:P),M.copy(N),this.mode){case"translate":case"scale":switch(this.axis){case"X":M.copy(this.eye).cross(R),T.copy(R).cross(M);break;case"Y":M.copy(this.eye).cross(N),T.copy(N).cross(M);break;case"Z":M.copy(this.eye).cross(C),T.copy(C).cross(M);break;case"XY":T.copy(C);break;case"YZ":T.copy(R);break;case"XZ":M.copy(C),T.copy(N);break;case"XYZ":case"E":T.set(0,0,0);break}break;case"rotate":default:T.set(0,0,0)}0===T.length()?this.quaternion.copy(this.cameraQuaternion):(A.lookAt(a.set(0,0,0),T,M),this.quaternion.setFromRotationMatrix(A)),super.updateMatrixWorld(t)}}}}]);